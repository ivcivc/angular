{"version":3,"sources":["core/watcher-helper.ts"],"names":[],"mappings":"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","file":"watcher-helper.js","sourcesContent":["import {\n    Injectable\n} from '@angular/core';\n\nconst DOCUMENT_NODE_TYPE = 9;\n\n@Injectable()\nexport class WatcherHelper {\n    private _watchers: any[] = [];\n\n    getWatchMethod() {\n        let watchMethod = (valueGetter, valueChangeCallback, options) => {\n            let oldValue = valueGetter();\n            options = options || {};\n\n            if (!options.skipImmediate) {\n                valueChangeCallback(oldValue);\n            }\n\n            let watcher = () => {\n                let newValue = valueGetter();\n\n                if (this._isDifferentValues(oldValue, newValue, options.deep)) {\n                    if (options.disposeWithElement && this._isElementExpired(options.disposeWithElement)) {\n                        return true;\n                    }\n\n                    valueChangeCallback(newValue);\n                    oldValue = newValue;\n                }\n            };\n\n            this._watchers.push(watcher);\n\n            return () => {\n                let index = this._watchers.indexOf(watcher);\n\n                if (index !== -1) {\n                    this._watchers.splice(index, 1);\n                }\n            };\n        };\n\n        return watchMethod;\n    }\n\n    private _isElementExpired(element: any) {\n        let isExpired = false;\n\n        if (element) {\n            isExpired = element.getRootNode().nodeType !== DOCUMENT_NODE_TYPE;\n        }\n\n        return isExpired;\n    }\n\n    private _isDifferentValues(oldValue: any, newValue: any, deepCheck: boolean) {\n        let isDifferentValue = false;\n\n        if (deepCheck && newValue instanceof (Object)) {\n            isDifferentValue = this._checkObjectsFields(newValue, oldValue);\n        } else {\n            isDifferentValue = oldValue !== newValue;\n        }\n\n        return isDifferentValue;\n    }\n\n    private _checkObjectsFields(checkingFromObject: Object, checkingToObject: Object) {\n        let isDifferentObjects = false;\n\n        for (let field in checkingFromObject) {\n            isDifferentObjects = checkingFromObject[field] !== checkingToObject[field];\n\n            if (isDifferentObjects) {\n                break;\n            }\n        }\n\n        return isDifferentObjects;\n    }\n\n    checkWatchers() {\n       for (let watcher of this._watchers) {\n            let isWatcherExpired = watcher();\n\n            if (isWatcherExpired) {\n                this._watchers.splice(this._watchers.indexOf(watcher), 1);\n            }\n        }\n    }\n}\n"]}