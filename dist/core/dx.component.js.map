{"version":3,"sources":["core/dx.component.ts"],"names":[],"mappings":";;;;;;AAUA,IAAM,aAAa,GAAG,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;AAE1D;IA8EI,yBAAsB,OAAmB,EAAU,MAAc,EAAE,YAA4B,EAAU,aAA4B;QAA/G,YAAO,GAAP,OAAO,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAwC,kBAAa,GAAb,aAAa,CAAe;QACjI,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAzEO,wCAAc,GAAtB;QAAA,iBASC;QARG,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YACxB,IAAI,kBAAgB,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ;gBAC3B,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACjF,kBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;YAC/C,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,kBAAgB,CAAC;QACvD,CAAC;IACL,CAAC;IACO,sCAAY,GAApB;QAAA,iBASC;QARG,aAAa,CAAC,OAAO,CAAC,UAAA,SAAS;YAC3B,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,UAAC,CAAC;gBAChC,IAAI,OAAO,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC;gBAC9B,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IAC3E,CAAC;IACO,qCAAW,GAAnB;QAAA,iBAoBC;QAnBG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,KAAK;YACtB,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,EAAE,UAAA,CAAC;oBAC/B,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,KAAK,eAAe,CAAC,CAAC,CAAC;wBACtC,IAAI,eAAe,GAAG,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC;wBACxC,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;4BACxB,KAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;wBACxC,CAAC;wBACD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BACnB,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gCACZ,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAC7B,CAAC,CAAC,CAAC;wBACP,CAAC;oBACL,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACS,oCAAU,GAApB,UAAqB,IAAY;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;IACL,CAAC;IACS,oCAAU,GAApB,UAAqB,IAAY,EAAE,KAAU;QACzC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACvC,CAAC;IACL,CAAC;IACO,yCAAe,GAAvB;QAAA,iBAKC;QAJG,IAAI,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAA,QAAQ;YAC7B,KAAI,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAES,uCAAa,GAAvB,UAAwB,OAAY;QAChC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;QACpE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAMD,qCAAW,GAAX,UAAY,QAA6B;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IACL,sBAAC;AAAD,CAtFA,AAsFC,IAAA;AAtFqB,uBAAe,kBAsFpC,CAAA;AAED;IAA0C,+BAAe;IAAzD;QAA0C,8BAAe;IAIzD,CAAC;IAHG,qCAAe,GAAf;QACI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;IACnD,CAAC;IACL,kBAAC;AAAD,CAJA,AAIC,CAJyC,eAAe,GAIxD;AAJqB,mBAAW,cAIhC,CAAA;AAED;IAAmD,wCAAe;IAAlE;QAAmD,8BAAe;IAIlE,CAAC;IAHG,6CAAc,GAAd,UAAe,OAAY;QACvB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IACL,2BAAC;AAAD,CAJA,AAIC,CAJkD,eAAe,GAIjE;AAJqB,4BAAoB,uBAIzC,CAAA","file":"dx.component.js","sourcesContent":["import {\n    AfterViewInit,\n    ElementRef,\n    NgZone\n} from '@angular/core';\n\nimport { DxTemplateDirective } from './dx.template';\nimport { DxTemplateHost } from './dx.template-host';\nimport { WatcherHelper } from './watcher-helper';\n\nconst startupEvents = ['onInitialized', 'onContentReady'];\n\nexport abstract class DxComponentBase {\n    private _initialOptions: any;\n    templates: DxTemplateDirective[];\n    widgetClassName: string;\n    instance: any;\n\n    protected _events: { subscribe?: string, emit: string }[];\n    protected _properties: string[];\n\n    private _initTemplates() {\n        if (this.templates.length) {\n            let initialTemplates = {};\n            this.templates.forEach(template => {\n                this._initialOptions[template.name] = template.templateAsFunction.bind(template);\n                initialTemplates[template.name] = template;\n            });\n            this._initialOptions._templates = initialTemplates;\n        }\n    }\n    private _initOptions() {\n        startupEvents.forEach(eventName => {\n            this._initialOptions[eventName] = (e) => {\n                let emitter = this[eventName];\n                return emitter && emitter.emit(e);\n            };\n        });\n\n        this._initialOptions.watchMethod = this.watcherHelper.getWatchMethod();\n    }\n    private _initEvents() {\n        this._events.forEach(event => {\n            if (event.subscribe) {\n                this.instance.on(event.subscribe, e => {\n                    if (event.subscribe === 'optionChanged') {\n                        let changeEventName = e.name + 'Change';\n                        if (this[changeEventName]) {\n                            this[changeEventName].emit(e.value);\n                        }\n                        this[event.emit].emit(e);\n                    } else {\n                        if (this[event.emit]) {\n                            this.ngZone.run(() => {\n                                this[event.emit].emit(e);\n                            });\n                        }\n                    }\n                });\n            }\n        });\n    }\n    protected _getOption(name: string) {\n        if (this.instance) {\n            return this.instance.option(name);\n        } else {\n            return this._initialOptions[name];\n        }\n    }\n    protected _setOption(name: string, value: any) {\n        if (this.instance) {\n            this.instance.option(name, value);\n        } else {\n            this._initialOptions[name] = value;\n        }\n    }\n    private _initProperties() {\n        let defaultOptions = this.instance.option();\n        this._properties.forEach(property => {\n            this[property] = defaultOptions[property];\n        });\n    }\n    protected abstract _createInstance(element, options)\n    protected _createWidget(element: any) {\n        this._initTemplates();\n        this._initOptions();\n        this.instance = this._createInstance(element, this._initialOptions);\n        this._initEvents();\n        this._initProperties();\n    }\n    constructor(protected element: ElementRef, private ngZone: NgZone, templateHost: DxTemplateHost, private watcherHelper: WatcherHelper) {\n        this._initialOptions = {};\n        this.templates = [];\n        templateHost.setHost(this);\n    }\n    setTemplate(template: DxTemplateDirective) {\n        this.templates.push(template);\n    }\n}\n\nexport abstract class DxComponent extends DxComponentBase implements AfterViewInit {\n    ngAfterViewInit() {\n        this._createWidget(this.element.nativeElement);\n    }\n}\n\nexport abstract class DxComponentExtension extends DxComponentBase {\n    createInstance(element: any) {\n        this._createWidget(element);\n    }\n}\n\n\n\n"]}