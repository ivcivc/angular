{"version":3,"sources":["core/dx.template.ts"],"names":[],"mappings":"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","file":"dx.template.js","sourcesContent":["/* tslint:disable:use-input-property-decorator */\n\nimport {\n    Directive,\n    NgModule,\n    EmbeddedViewRef,\n    TemplateRef,\n    ViewContainerRef\n} from '@angular/core';\n\nimport { DxTemplateHost } from './dx.template-host';\n\ndeclare function require(params: any): any;\nlet $ = require('jquery');\n\nexport class RenderData {\n    model: any;\n    itemIndex: number;\n    container: any;\n}\n\n@Directive({\n    selector: '[dxTemplate]',\n    inputs: ['dxTemplate', 'dxTemplateOf']\n})\nexport class DxTemplateDirective {\n    childView: EmbeddedViewRef<any>;\n    name: string;\n    constructor(private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef, private templateHost: DxTemplateHost) {\n        templateHost.setTemplate(this);\n    }\n    private _renderCore(renderData: RenderData) {\n        let childView = this.viewContainerRef.createEmbeddedView(this.templateRef, { '$implicit': renderData.model });\n        if (renderData.container) {\n            renderData.container.append(childView.rootNodes);\n        }\n        // =========== WORKAROUND =============\n        // https://github.com/angular/angular/issues/12243\n        childView['detectChanges']();\n        // =========== /WORKAROUND =============\n        return $(childView.rootNodes);\n    }\n    templateAsFunction(model, itemIndex, container) {\n        let renderData: RenderData = this._normalizeArguments(model, itemIndex, container);\n        this.render(renderData);\n    }\n    _normalizeArguments(model, itemIndex, container): RenderData {\n        if (container === undefined) {\n            if (itemIndex === undefined) {\n                container = model;\n                model = undefined;\n            } else if (itemIndex instanceof $) {\n                container = itemIndex;\n                itemIndex = undefined;\n            } else {\n                container = model;\n                model = itemIndex;\n            }\n        } else if (itemIndex instanceof $) {\n            let cachedItemIndex = container;\n\n            container = itemIndex;\n            itemIndex = cachedItemIndex;\n        }\n\n        return {\n            model: model,\n            itemIndex: itemIndex,\n            container: container\n        };\n    }\n    render(renderData: RenderData) {\n        renderData.container.empty();\n        return this._renderCore(renderData);\n    }\n    dispose() {\n        this.templateHost = null;\n    }\n    owner() {\n        if (this.templateHost) {\n            return this.templateHost.host.instance;\n        }\n        return null;\n    }\n    source() {\n        return $();\n    }\n    set dxTemplateOf(value) {\n        this.name = value;\n    }\n}\n\n@NgModule({\n    declarations: [DxTemplateDirective],\n    exports: [DxTemplateDirective]\n})\nexport class DxTemplateModule { }\n"]}