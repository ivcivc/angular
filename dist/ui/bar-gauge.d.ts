import { ElementRef, EventEmitter, NgZone, OnChanges, DoCheck, SimpleChanges } from '@angular/core';
import DxBarGauge from 'devextreme/viz/bar_gauge';
import { DxComponent } from '../core/dx.component';
import { DxTemplateHost } from '../core/dx.template-host';
import { WatcherHelper } from '../core/watcher-helper';
import { IterableDifferHelper } from '../core/iterable-differ-helper';
export declare class DxBarGaugeComponent extends DxComponent implements OnChanges, DoCheck {
    private _watcherHelper;
    private _idh;
    instance: DxBarGauge;
    rtlEnabled: any;
    export: any;
    loadingIndicator: any;
    margin: any;
    pathModified: any;
    redrawOnResize: any;
    size: any;
    theme: any;
    title: any;
    tooltip: any;
    animation: any;
    backgroundColor: any;
    barSpacing: any;
    baseValue: any;
    endValue: any;
    geometry: any;
    label: any;
    palette: any;
    relativeInnerRadius: any;
    startValue: any;
    subtitle: any;
    values: any;
    onDisposing: EventEmitter<any>;
    onInitialized: EventEmitter<any>;
    onOptionChanged: EventEmitter<any>;
    onDrawn: EventEmitter<any>;
    onExported: EventEmitter<any>;
    onExporting: EventEmitter<any>;
    onFileSaving: EventEmitter<any>;
    onIncidentOccurred: EventEmitter<any>;
    onTooltipHidden: EventEmitter<any>;
    onTooltipShown: EventEmitter<any>;
    rtlEnabledChange: EventEmitter<any>;
    exportChange: EventEmitter<any>;
    loadingIndicatorChange: EventEmitter<any>;
    marginChange: EventEmitter<any>;
    pathModifiedChange: EventEmitter<any>;
    redrawOnResizeChange: EventEmitter<any>;
    sizeChange: EventEmitter<any>;
    themeChange: EventEmitter<any>;
    titleChange: EventEmitter<any>;
    tooltipChange: EventEmitter<any>;
    animationChange: EventEmitter<any>;
    backgroundColorChange: EventEmitter<any>;
    barSpacingChange: EventEmitter<any>;
    baseValueChange: EventEmitter<any>;
    endValueChange: EventEmitter<any>;
    geometryChange: EventEmitter<any>;
    labelChange: EventEmitter<any>;
    paletteChange: EventEmitter<any>;
    relativeInnerRadiusChange: EventEmitter<any>;
    startValueChange: EventEmitter<any>;
    subtitleChange: EventEmitter<any>;
    valuesChange: EventEmitter<any>;
    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper);
    protected _createInstance(element: any, options: any): DxBarGauge;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
}
export declare class DxBarGaugeModule {
}
