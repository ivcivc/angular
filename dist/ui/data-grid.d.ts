import { ElementRef, EventEmitter, NgZone, OnChanges, DoCheck, SimpleChanges } from '@angular/core';
import DxDataGrid from 'devextreme/ui/data_grid';
import { DxComponent } from '../core/dx.component';
import { DxTemplateHost } from '../core/dx.template-host';
import { WatcherHelper } from '../core/watcher-helper';
import { IterableDifferHelper } from '../core/iterable-differ-helper';
export declare class DxDataGridComponent extends DxComponent implements OnChanges, DoCheck {
    private _watcherHelper;
    private _idh;
    instance: DxDataGrid;
    height: any;
    rtlEnabled: any;
    width: any;
    accessKey: any;
    activeStateEnabled: any;
    disabled: any;
    focusStateEnabled: any;
    hint: any;
    hoverStateEnabled: any;
    tabIndex: any;
    visible: any;
    allowColumnReordering: any;
    allowColumnResizing: any;
    cacheEnabled: any;
    cellHintEnabled: any;
    columnAutoWidth: any;
    columnChooser: any;
    columnFixing: any;
    columnHidingEnabled: any;
    columns: any;
    customizeColumns: any;
    customizeExportData: any;
    dataSource: any;
    editing: any;
    errorRowEnabled: any;
    export: any;
    filterRow: any;
    grouping: any;
    groupPanel: any;
    headerFilter: any;
    loadPanel: any;
    masterDetail: any;
    noDataText: any;
    pager: any;
    paging: any;
    remoteOperations: any;
    rowAlternationEnabled: any;
    rowTemplate: any;
    scrolling: any;
    searchPanel: any;
    selectedRowKeys: any;
    selection: any;
    showBorders: any;
    showColumnHeaders: any;
    showColumnLines: any;
    showRowLines: any;
    sortByGroupSummaryInfo: any;
    sorting: any;
    stateStoring: any;
    summary: any;
    twoWayBindingEnabled: any;
    wordWrapEnabled: any;
    onDisposing: EventEmitter<any>;
    onInitialized: EventEmitter<any>;
    onOptionChanged: EventEmitter<any>;
    onContentReady: EventEmitter<any>;
    onAdaptiveDetailRowPreparing: EventEmitter<any>;
    onCellClick: EventEmitter<any>;
    onCellHoverChanged: EventEmitter<any>;
    onCellPrepared: EventEmitter<any>;
    onContextMenuPreparing: EventEmitter<any>;
    onDataErrorOccurred: EventEmitter<any>;
    onEditingStart: EventEmitter<any>;
    onEditorPrepared: EventEmitter<any>;
    onEditorPreparing: EventEmitter<any>;
    onExported: EventEmitter<any>;
    onExporting: EventEmitter<any>;
    onFileSaving: EventEmitter<any>;
    onInitNewRow: EventEmitter<any>;
    onKeyDown: EventEmitter<any>;
    onRowClick: EventEmitter<any>;
    onRowCollapsed: EventEmitter<any>;
    onRowCollapsing: EventEmitter<any>;
    onRowExpanded: EventEmitter<any>;
    onRowExpanding: EventEmitter<any>;
    onRowInserted: EventEmitter<any>;
    onRowInserting: EventEmitter<any>;
    onRowPrepared: EventEmitter<any>;
    onRowRemoved: EventEmitter<any>;
    onRowRemoving: EventEmitter<any>;
    onRowUpdated: EventEmitter<any>;
    onRowUpdating: EventEmitter<any>;
    onRowValidating: EventEmitter<any>;
    onSelectionChanged: EventEmitter<any>;
    onToolbarPreparing: EventEmitter<any>;
    heightChange: EventEmitter<any>;
    rtlEnabledChange: EventEmitter<any>;
    widthChange: EventEmitter<any>;
    accessKeyChange: EventEmitter<any>;
    activeStateEnabledChange: EventEmitter<any>;
    disabledChange: EventEmitter<any>;
    focusStateEnabledChange: EventEmitter<any>;
    hintChange: EventEmitter<any>;
    hoverStateEnabledChange: EventEmitter<any>;
    tabIndexChange: EventEmitter<any>;
    visibleChange: EventEmitter<any>;
    allowColumnReorderingChange: EventEmitter<any>;
    allowColumnResizingChange: EventEmitter<any>;
    cacheEnabledChange: EventEmitter<any>;
    cellHintEnabledChange: EventEmitter<any>;
    columnAutoWidthChange: EventEmitter<any>;
    columnChooserChange: EventEmitter<any>;
    columnFixingChange: EventEmitter<any>;
    columnHidingEnabledChange: EventEmitter<any>;
    columnsChange: EventEmitter<any>;
    customizeColumnsChange: EventEmitter<any>;
    customizeExportDataChange: EventEmitter<any>;
    dataSourceChange: EventEmitter<any>;
    editingChange: EventEmitter<any>;
    errorRowEnabledChange: EventEmitter<any>;
    exportChange: EventEmitter<any>;
    filterRowChange: EventEmitter<any>;
    groupingChange: EventEmitter<any>;
    groupPanelChange: EventEmitter<any>;
    headerFilterChange: EventEmitter<any>;
    loadPanelChange: EventEmitter<any>;
    masterDetailChange: EventEmitter<any>;
    noDataTextChange: EventEmitter<any>;
    pagerChange: EventEmitter<any>;
    pagingChange: EventEmitter<any>;
    remoteOperationsChange: EventEmitter<any>;
    rowAlternationEnabledChange: EventEmitter<any>;
    rowTemplateChange: EventEmitter<any>;
    scrollingChange: EventEmitter<any>;
    searchPanelChange: EventEmitter<any>;
    selectedRowKeysChange: EventEmitter<any>;
    selectionChange: EventEmitter<any>;
    showBordersChange: EventEmitter<any>;
    showColumnHeadersChange: EventEmitter<any>;
    showColumnLinesChange: EventEmitter<any>;
    showRowLinesChange: EventEmitter<any>;
    sortByGroupSummaryInfoChange: EventEmitter<any>;
    sortingChange: EventEmitter<any>;
    stateStoringChange: EventEmitter<any>;
    summaryChange: EventEmitter<any>;
    twoWayBindingEnabledChange: EventEmitter<any>;
    wordWrapEnabledChange: EventEmitter<any>;
    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper);
    protected _createInstance(element: any, options: any): DxDataGrid;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
}
export declare class DxDataGridModule {
}
