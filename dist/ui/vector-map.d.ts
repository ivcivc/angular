import { ElementRef, EventEmitter, NgZone, OnChanges, DoCheck, SimpleChanges } from '@angular/core';
import DxVectorMap from 'devextreme/viz/vector_map';
import { DxComponent } from '../core/dx.component';
import { DxTemplateHost } from '../core/dx.template-host';
import { WatcherHelper } from '../core/watcher-helper';
import { IterableDifferHelper } from '../core/iterable-differ-helper';
export declare class DxVectorMapComponent extends DxComponent implements OnChanges, DoCheck {
    private _watcherHelper;
    private _idh;
    instance: DxVectorMap;
    rtlEnabled: any;
    export: any;
    loadingIndicator: any;
    pathModified: any;
    redrawOnResize: any;
    size: any;
    theme: any;
    title: any;
    tooltip: any;
    areaSettings: any;
    background: any;
    bounds: any;
    center: any;
    controlBar: any;
    layers: any;
    legends: any;
    mapData: any;
    markers: any;
    markerSettings: any;
    maxZoomFactor: any;
    panningEnabled: any;
    projection: any;
    touchEnabled: any;
    wheelEnabled: any;
    zoomFactor: any;
    zoomingEnabled: any;
    onDisposing: EventEmitter<any>;
    onInitialized: EventEmitter<any>;
    onOptionChanged: EventEmitter<any>;
    onDrawn: EventEmitter<any>;
    onExported: EventEmitter<any>;
    onExporting: EventEmitter<any>;
    onFileSaving: EventEmitter<any>;
    onIncidentOccurred: EventEmitter<any>;
    onAreaClick: EventEmitter<any>;
    onAreaSelectionChanged: EventEmitter<any>;
    onCenterChanged: EventEmitter<any>;
    onClick: EventEmitter<any>;
    onMarkerClick: EventEmitter<any>;
    onMarkerSelectionChanged: EventEmitter<any>;
    onSelectionChanged: EventEmitter<any>;
    onTooltipHidden: EventEmitter<any>;
    onTooltipShown: EventEmitter<any>;
    onZoomFactorChanged: EventEmitter<any>;
    rtlEnabledChange: EventEmitter<any>;
    exportChange: EventEmitter<any>;
    loadingIndicatorChange: EventEmitter<any>;
    pathModifiedChange: EventEmitter<any>;
    redrawOnResizeChange: EventEmitter<any>;
    sizeChange: EventEmitter<any>;
    themeChange: EventEmitter<any>;
    titleChange: EventEmitter<any>;
    tooltipChange: EventEmitter<any>;
    areaSettingsChange: EventEmitter<any>;
    backgroundChange: EventEmitter<any>;
    boundsChange: EventEmitter<any>;
    centerChange: EventEmitter<any>;
    controlBarChange: EventEmitter<any>;
    layersChange: EventEmitter<any>;
    legendsChange: EventEmitter<any>;
    mapDataChange: EventEmitter<any>;
    markersChange: EventEmitter<any>;
    markerSettingsChange: EventEmitter<any>;
    maxZoomFactorChange: EventEmitter<any>;
    panningEnabledChange: EventEmitter<any>;
    projectionChange: EventEmitter<any>;
    touchEnabledChange: EventEmitter<any>;
    wheelEnabledChange: EventEmitter<any>;
    zoomFactorChange: EventEmitter<any>;
    zoomingEnabledChange: EventEmitter<any>;
    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper);
    protected _createInstance(element: any, options: any): DxVectorMap;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
}
export declare class DxVectorMapModule {
}
