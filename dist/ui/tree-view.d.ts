import { ElementRef, EventEmitter, NgZone, OnChanges, DoCheck, SimpleChanges } from '@angular/core';
import DxTreeView from 'devextreme/ui/tree_view';
import { DxComponent } from '../core/dx.component';
import { DxTemplateHost } from '../core/dx.template-host';
import { WatcherHelper } from '../core/watcher-helper';
import { IterableDifferHelper } from '../core/iterable-differ-helper';
export declare class DxTreeViewComponent extends DxComponent implements OnChanges, DoCheck {
    private _watcherHelper;
    private _idh;
    instance: DxTreeView;
    height: any;
    rtlEnabled: any;
    width: any;
    accessKey: any;
    activeStateEnabled: any;
    disabled: any;
    focusStateEnabled: any;
    hint: any;
    hoverStateEnabled: any;
    tabIndex: any;
    visible: any;
    dataSource: any;
    itemHoldTimeout: any;
    itemTemplate: any;
    noDataText: any;
    selectionMode: any;
    items: any;
    disabledExpr: any;
    displayExpr: any;
    itemsExpr: any;
    keyExpr: any;
    selectedExpr: any;
    animationEnabled: any;
    createChildren: any;
    dataStructure: any;
    expandAllEnabled: any;
    expandedExpr: any;
    expandNodesRecursive: any;
    hasItemsExpr: any;
    parentIdExpr: any;
    rootValue: any;
    scrollDirection: any;
    searchValue: any;
    selectAllEnabled: any;
    selectAllText: any;
    selectByClick: any;
    selectNodesRecursive: any;
    showCheckBoxes: any;
    showCheckBoxesMode: any;
    virtualModeEnabled: any;
    onDisposing: EventEmitter<any>;
    onInitialized: EventEmitter<any>;
    onOptionChanged: EventEmitter<any>;
    onContentReady: EventEmitter<any>;
    onItemClick: EventEmitter<any>;
    onItemContextMenu: EventEmitter<any>;
    onItemHold: EventEmitter<any>;
    onItemRendered: EventEmitter<any>;
    onSelectionChanged: EventEmitter<any>;
    onItemCollapsed: EventEmitter<any>;
    onItemExpanded: EventEmitter<any>;
    onItemSelected: EventEmitter<any>;
    onItemSelectionChanged: EventEmitter<any>;
    heightChange: EventEmitter<any>;
    rtlEnabledChange: EventEmitter<any>;
    widthChange: EventEmitter<any>;
    accessKeyChange: EventEmitter<any>;
    activeStateEnabledChange: EventEmitter<any>;
    disabledChange: EventEmitter<any>;
    focusStateEnabledChange: EventEmitter<any>;
    hintChange: EventEmitter<any>;
    hoverStateEnabledChange: EventEmitter<any>;
    tabIndexChange: EventEmitter<any>;
    visibleChange: EventEmitter<any>;
    dataSourceChange: EventEmitter<any>;
    itemHoldTimeoutChange: EventEmitter<any>;
    itemTemplateChange: EventEmitter<any>;
    noDataTextChange: EventEmitter<any>;
    selectionModeChange: EventEmitter<any>;
    itemsChange: EventEmitter<any>;
    disabledExprChange: EventEmitter<any>;
    displayExprChange: EventEmitter<any>;
    itemsExprChange: EventEmitter<any>;
    keyExprChange: EventEmitter<any>;
    selectedExprChange: EventEmitter<any>;
    animationEnabledChange: EventEmitter<any>;
    createChildrenChange: EventEmitter<any>;
    dataStructureChange: EventEmitter<any>;
    expandAllEnabledChange: EventEmitter<any>;
    expandedExprChange: EventEmitter<any>;
    expandNodesRecursiveChange: EventEmitter<any>;
    hasItemsExprChange: EventEmitter<any>;
    parentIdExprChange: EventEmitter<any>;
    rootValueChange: EventEmitter<any>;
    scrollDirectionChange: EventEmitter<any>;
    searchValueChange: EventEmitter<any>;
    selectAllEnabledChange: EventEmitter<any>;
    selectAllTextChange: EventEmitter<any>;
    selectByClickChange: EventEmitter<any>;
    selectNodesRecursiveChange: EventEmitter<any>;
    showCheckBoxesChange: EventEmitter<any>;
    showCheckBoxesModeChange: EventEmitter<any>;
    virtualModeEnabledChange: EventEmitter<any>;
    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper);
    protected _createInstance(element: any, options: any): DxTreeView;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
}
export declare class DxTreeViewModule {
}
