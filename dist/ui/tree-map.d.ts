import { ElementRef, EventEmitter, NgZone, OnChanges, DoCheck, SimpleChanges } from '@angular/core';
import DxTreeMap from 'devextreme/viz/tree_map';
import { DxComponent } from '../core/dx.component';
import { DxTemplateHost } from '../core/dx.template-host';
import { WatcherHelper } from '../core/watcher-helper';
import { IterableDifferHelper } from '../core/iterable-differ-helper';
export declare class DxTreeMapComponent extends DxComponent implements OnChanges, DoCheck {
    private _watcherHelper;
    private _idh;
    instance: DxTreeMap;
    rtlEnabled: any;
    export: any;
    loadingIndicator: any;
    pathModified: any;
    redrawOnResize: any;
    size: any;
    theme: any;
    title: any;
    tooltip: any;
    childrenField: any;
    colorField: any;
    colorizer: any;
    dataSource: any;
    group: any;
    hoverEnabled: any;
    idField: any;
    interactWithGroup: any;
    labelField: any;
    layoutAlgorithm: any;
    layoutDirection: any;
    maxDepth: any;
    parentField: any;
    resolveLabelOverflow: any;
    selectionMode: any;
    tile: any;
    valueField: any;
    onDisposing: EventEmitter<any>;
    onInitialized: EventEmitter<any>;
    onOptionChanged: EventEmitter<any>;
    onDrawn: EventEmitter<any>;
    onExported: EventEmitter<any>;
    onExporting: EventEmitter<any>;
    onFileSaving: EventEmitter<any>;
    onIncidentOccurred: EventEmitter<any>;
    onClick: EventEmitter<any>;
    onDrill: EventEmitter<any>;
    onHoverChanged: EventEmitter<any>;
    onNodesInitialized: EventEmitter<any>;
    onNodesRendering: EventEmitter<any>;
    onSelectionChanged: EventEmitter<any>;
    rtlEnabledChange: EventEmitter<any>;
    exportChange: EventEmitter<any>;
    loadingIndicatorChange: EventEmitter<any>;
    pathModifiedChange: EventEmitter<any>;
    redrawOnResizeChange: EventEmitter<any>;
    sizeChange: EventEmitter<any>;
    themeChange: EventEmitter<any>;
    titleChange: EventEmitter<any>;
    tooltipChange: EventEmitter<any>;
    childrenFieldChange: EventEmitter<any>;
    colorFieldChange: EventEmitter<any>;
    colorizerChange: EventEmitter<any>;
    dataSourceChange: EventEmitter<any>;
    groupChange: EventEmitter<any>;
    hoverEnabledChange: EventEmitter<any>;
    idFieldChange: EventEmitter<any>;
    interactWithGroupChange: EventEmitter<any>;
    labelFieldChange: EventEmitter<any>;
    layoutAlgorithmChange: EventEmitter<any>;
    layoutDirectionChange: EventEmitter<any>;
    maxDepthChange: EventEmitter<any>;
    parentFieldChange: EventEmitter<any>;
    resolveLabelOverflowChange: EventEmitter<any>;
    selectionModeChange: EventEmitter<any>;
    tileChange: EventEmitter<any>;
    valueFieldChange: EventEmitter<any>;
    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper);
    protected _createInstance(element: any, options: any): DxTreeMap;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
}
export declare class DxTreeMapModule {
}
