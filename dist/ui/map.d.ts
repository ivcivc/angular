import { ElementRef, EventEmitter, NgZone, OnChanges, DoCheck, SimpleChanges } from '@angular/core';
import DxMap from 'devextreme/ui/map';
import { DxComponent } from '../core/dx.component';
import { DxTemplateHost } from '../core/dx.template-host';
import { WatcherHelper } from '../core/watcher-helper';
import { IterableDifferHelper } from '../core/iterable-differ-helper';
export declare class DxMapComponent extends DxComponent implements OnChanges, DoCheck {
    private _watcherHelper;
    private _idh;
    instance: DxMap;
    height: any;
    rtlEnabled: any;
    width: any;
    accessKey: any;
    activeStateEnabled: any;
    disabled: any;
    focusStateEnabled: any;
    hint: any;
    hoverStateEnabled: any;
    tabIndex: any;
    visible: any;
    autoAdjust: any;
    center: any;
    controls: any;
    key: any;
    markerIconSrc: any;
    markers: any;
    provider: any;
    routes: any;
    type: any;
    zoom: any;
    onDisposing: EventEmitter<any>;
    onInitialized: EventEmitter<any>;
    onOptionChanged: EventEmitter<any>;
    onClick: EventEmitter<any>;
    onMarkerAdded: EventEmitter<any>;
    onMarkerRemoved: EventEmitter<any>;
    onReady: EventEmitter<any>;
    onRouteAdded: EventEmitter<any>;
    onRouteRemoved: EventEmitter<any>;
    heightChange: EventEmitter<any>;
    rtlEnabledChange: EventEmitter<any>;
    widthChange: EventEmitter<any>;
    accessKeyChange: EventEmitter<any>;
    activeStateEnabledChange: EventEmitter<any>;
    disabledChange: EventEmitter<any>;
    focusStateEnabledChange: EventEmitter<any>;
    hintChange: EventEmitter<any>;
    hoverStateEnabledChange: EventEmitter<any>;
    tabIndexChange: EventEmitter<any>;
    visibleChange: EventEmitter<any>;
    autoAdjustChange: EventEmitter<any>;
    centerChange: EventEmitter<any>;
    controlsChange: EventEmitter<any>;
    keyChange: EventEmitter<any>;
    markerIconSrcChange: EventEmitter<any>;
    markersChange: EventEmitter<any>;
    providerChange: EventEmitter<any>;
    routesChange: EventEmitter<any>;
    typeChange: EventEmitter<any>;
    zoomChange: EventEmitter<any>;
    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper);
    protected _createInstance(element: any, options: any): DxMap;
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
}
export declare class DxMapModule {
}
