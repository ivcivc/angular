{"version":3,"sources":["app.component.ts"],"names":[],"mappings":"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","file":"app.component.js","sourcesContent":["import {\n    Component,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport {\n    AbstractControl,\n    FormGroup,\n    FormControl,\n    Validators\n} from '@angular/forms';\nimport {\n    Orange,\n    OrangeService\n} from './orange.service';\nimport{\n    Customer,\n    CustomerService\n} from './customer.service';\nimport{\n    Appointment,\n    AppointmentService\n} from './appointment.service';\nimport{\n    OwnerService\n} from './owner.service';\nimport{\n    DxPopoverComponent\n} from '../../dist';\n\ndeclare let $: any;\n\n@Component({\n    selector: 'my-app',\n    styles: [`\n        h1, h2, h3 {\n            font-family: 'Helvetica Neue','Segoe UI',Helvetica,Verdana,sans-serif;\n        }\n        .demo-container {\n            width: 400px;\n        }\n        .demo-container > .dx-widget {\n            margin-bottom: 20px;\n            -display: block;\n        }\n        .float-right {\n            float: right;\n        }\n        .full-width {\n            width: 100%;\n            display: block;\n        }\n        .scroll-view-height {\n            height: 200px;\n            display: block;\n        }\n        .resizable {\n            display: block; \n            background-color: #ccc;\n        }\n        .tab-content {\n            text-align: justify;\n            margin-top: 25px;\n        }\n        #tabs {\n            margin-top: 60px;\n        }\n        .tabpanel-item {\n            height: 200px;\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            padding-left: 25px;\n            padding-top: 55px;\n        }\n        .tabpanel-item  > div {\n            float: left;\n            padding: 0 85px 10px 10px\n        }\n        .tabpanel-item  p {\n            font-size: 16px;\n        }\n        .form-group {\n            margin-bottom: 10px;\n        }\n    `],\n    templateUrl: 'app/app.component.html',\n    providers: [\n        OrangeService,\n        CustomerService,\n        AppointmentService,\n        OwnerService\n    ]\n})\nexport class AppComponent implements OnInit {\n    @ViewChild(DxPopoverComponent) popover: DxPopoverComponent;\n    text = 'Initial text';\n    email: string;\n    emailControl: AbstractControl;\n    password: string;\n    passwordControl: AbstractControl;\n    dxValidationRules = {\n        email: [\n            { type: 'required', message: 'Email is required.' },\n            { type: 'email', message: 'Email is invalid.' }\n        ],\n        password: [\n            { type: 'required', message: 'Email is required.' }\n        ]\n    };\n    form: FormGroup;\n    boolValue: boolean;\n    numberValue: number;\n    dateValue: Date;\n    currentDate: Date;\n    demoItems: string[];\n    popupVisible = false;\n    series = {\n        argumentField: 'day',\n        valueField: 'oranges',\n        name: 'My oranges',\n        type: 'bar',\n        color: '#ffa500'\n    };\n    oranges: Orange[];\n    customers: Customer[];\n    appointments: Appointment[];\n    resources: any[];\n    tabs = [\n        {\n            id: 0,\n            text: 'user',\n            icon: 'user',\n            content: 'User tab content'\n        }, {\n            id: 1,\n            text: 'comment',\n            icon: 'comment',\n            content: 'Comment tab content'\n        }, {\n            id: 2,\n            text: 'find',\n            icon: 'find',\n            content: 'Find tab content'\n        }\n    ];\n    tabPanelItems: Customer[];\n    tabContent: string;\n    constructor(private orangeService: OrangeService,\n        private customerService: CustomerService,\n        private appointmentService: AppointmentService,\n        private ownerService: OwnerService) {\n        this.text = 'Text in textbox';\n        this.boolValue = true;\n        this.numberValue = 10;\n        this.dateValue = new Date();\n        this.currentDate = new Date(2015, 4, 25);\n        this.demoItems = [\n            'item1',\n            'item2',\n            'item3'\n        ];\n        this.tabContent = this.tabs[0].content;\n    }\n    helloWorld() {\n        alert('Hello world');\n    }\n    buy(model) {\n        alert(model + ' has been added to order');\n    }\n    callNumber(number) {\n        alert(number + ' is being called...');\n    }\n    onSubmit() {\n        this.form.updateValueAndValidity();\n        console.log('submitted');\n        return false;\n    }\n    validate(params) {\n        let result = params.validationGroup.validate();\n        if (result.isValid) {\n            alert('Form data is valid');\n        } else {\n            alert('Form data is invalid');\n        }\n    }\n    ngOnInit() {\n        this.form = new FormGroup({\n            emailControl: new FormControl('', Validators.compose([Validators.required, CustomValidator.mailFormat])),\n            passwordControl: new FormControl('', Validators.compose([Validators.required, Validators.minLength(6)]))\n        });\n        this.emailControl = this.form.controls['emailControl'];\n        this.passwordControl = this.form.controls['passwordControl'];\n        this.oranges = this.orangeService.getOranges();\n        this.customers = this.customerService.getCustomers();\n        this.appointments = this.appointmentService.getAppointments();\n        this.resources = [{\n            field: 'OwnerId',\n            allowMultiple: true,\n            dataSource: this.ownerService.getOwners(),\n            label: 'Owner'\n        }];\n        this.tabPanelItems = this.customers.slice(0, 4);\n    }\n    showPopover() {\n        this.popover.instance.show();\n    }\n    selectTab(e) {\n        this.tabContent = this.tabs[e.itemIndex].content;\n    }\n}\n\nexport class CustomValidator {\n    static mailFormat(control: FormControl) {\n        let EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n\n        if (control.value && control.value.length && (control.value.length <= 5 || !EMAIL_REGEXP.test(control.value))) {\n            return { 'incorrectMailFormat': true };\n        }\n\n        return null;\n    }\n}\n"]}