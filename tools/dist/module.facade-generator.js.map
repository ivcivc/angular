{"version":3,"sources":["module.facade-generator.ts"],"names":[],"mappings":";AAEA,IAAO,EAAE,WAAW,IAAI,CAAC,CAAC;AAC1B,IAAI,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACxC,uBAAmB,UAAU,CAAC,CAAA;AAE9B;IAAA;QACY,cAAS,GAAG,MAAM,CAAC;IAoD/B,CAAC;IAlDG,2CAAiB,GAAjB,UAAkB,QAAgB;QAC9B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACvC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACxC,QAAQ,GAAG,IAAI,GAAG,QAAQ,GAAG,QAAQ,CAAC;QAEtC,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC;IAED,kCAAQ,GAAR,UAAS,MAAM;QAAf,iBAyCC;QAxCG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAA,cAAc;YACpD,gBAAM,CAAC,mBAAmB,GAAG,cAAc,CAAC,CAAC;YAC7C,IAAI,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,EACnD,iBAAiB,GAAG,EAAE,EACtB,kBAAkB,GAAG,EAAE,CAAC;YAE5B,YAAY,CAAC,0BAA0B,CAAC,OAAO,CAAC,UAAA,aAAa;gBACzD,gBAAM,CAAC,kBAAkB,GAAG,aAAa,CAAC,CAAC;gBAC3C,IAAI,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;gBAE1C,KAAK,CAAC,OAAO,CAAC,UAAA,QAAQ;oBAClB,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACtD,IAAI,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;oBAElD,iBAAiB,IAAI,QAAQ,GAAG,UAAU,GAAG,GAAG,CAAC;oBACjD,kBAAkB,IAAI,WAAW,GAAG,UAAU,GAAG,aAAa,GAAG,QAAQ,GAAG,MAAM,CAAC;gBACvF,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,UAAA,UAAU;gBAC1D,iBAAiB,IAAI,QAAQ,GAAG,UAAU,GAAG,GAAG,CAAC;gBACjD,kBAAkB,IAAI,YAAY,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;YAC7E,CAAC,CAAC,CAAC;YAEH,iBAAiB,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnD,kBAAkB,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAErD,IAAI,aAAa,GAAG,6CAC/B,GAAG,kBAAkB,GAAG,iCAGV,GAAG,iBAAiB,GAAG,0BACvB,GAAG,iBAAiB,GAAG,iDAGrC,CAAC;YAEU,gBAAM,CAAC,kBAAkB,GAAG,cAAc,CAAC,CAAC;YAC5C,EAAE,CAAC,aAAa,CAAC,cAAc,EAAE,aAAa,EAAE,EAAE,QAAQ,EAAE,KAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACP,CAAC;IACL,sBAAC;AAAD,CArDA,AAqDC,IAAA;AArDD;iCAqDC,CAAA","file":"module.facade-generator.js","sourcesContent":["/// <reference path=\"../../typings/globals/node/index.d.ts\" />\n\nimport fs = require('fs');\nlet inflector = require('inflector-js');\nimport logger from './logger';\n\nexport default class FacadeGenerator {\n    private _encoding = 'utf8';\n\n    prepareModuleName(fileName: string) {\n        fileName = fileName.replace(/-/g, '_');\n        fileName = inflector.classify(fileName);\n        fileName = 'Dx' + fileName + 'Module';\n\n        return fileName;\n    }\n\n    generate(config) {\n        Object.keys(config.moduleFacades).forEach(moduleFilePath => {\n            logger('Generate facade: ' + moduleFilePath);\n            let facadeConfig = config.moduleFacades[moduleFilePath],\n                moduleNamesString = '',\n                importModuleString = '';\n\n            facadeConfig.sourceComponentDirectories.forEach(directoryPath => {\n                logger('List directory: ' + directoryPath);\n                let files = fs.readdirSync(directoryPath);\n\n                files.forEach(fileName => {\n                    fileName = fileName.substring(0, fileName.length - 3);\n                    let moduleName = this.prepareModuleName(fileName);\n\n                    moduleNamesString += '\\n    ' + moduleName + ',';\n                    importModuleString += `import { ` + moduleName + ` } from './` + fileName + `';\\n`;\n                });\n            });\n\n            Object.keys(facadeConfig.additionalImports).forEach(importName => {\n                moduleNamesString += '\\n    ' + importName + ',';\n                importModuleString += facadeConfig.additionalImports[importName] + ';\\n';\n            });\n\n            moduleNamesString = moduleNamesString.slice(0, -1);\n            importModuleString = importModuleString.slice(0, -1);\n\n            let resultContent = `import { NgModule } from '@angular/core';\n` + importModuleString + `\n\n@NgModule({\n    imports: [` + moduleNamesString + `\\n    ],\n    exports: [` + moduleNamesString + `\\n    ]\n})\nexport class DevExtremeModule {}\n`;\n\n            logger('Write result to ' + moduleFilePath);\n            fs.writeFileSync(moduleFilePath, resultContent, { encoding: this._encoding });\n        });\n    }\n}\n"]}